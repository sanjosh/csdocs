
1) identify what Spark pushes down in DataSource API
2) implement on GPU using thrust, stream, moderngpu
 - pg-strom uses nvrtc
 - alenka uses thrust + moderngpu but not streams
 - virginian uses streams but not thrust + moderngpu
3) benchmark runs which issues single + multiple ops    
 - thrust schedules to optimize max occupancy of GPU
4) identify what extra func can be overloaded in Spark

Spark 2.0 supports SQL-2003

SELECT 
==============
BUILTIN FUNC
AGGREGATE
distinct : select distinct speed from table
min : Select min(price)
max : Select max(price)
count : select count(*)
avg : select avg(price)
first
last
round
sum

STRING FUNC
concat

DATE FUNC

===========

UDF ?

WHERE 
equal, not equal, greater, less
between : where price between 500 and 600
exists
in : where col in (val1, val2)
like : where class Like "%abc"
contains : where contains(col, 'tst')
is null/not null : where field is NULL / NOT NULL

ORDER BY 
select col
from table
order by col ASC
(ascending, descending)

GROUP BY (used with aggregate func)
select count(col1), col2
from table
group by col2

HAVING (to supply predicates on aggrate func - cant use WHERE)
select  count(cust)
from customers
group by country
Having count(cust) > 5

http://www.sql-ex.com/help/select1.php
https://www.w3schools.com/sql/sql_orderby.asp

-------------------
This is the execution order of clauses in the SELECT operator:
FROM
WHERE
GROUP BY
HAVING
SELECT
ORDER BY

SELECT [DISTINCT | ALL]{*
| [<column expression> [[AS] <alias>]] [,…]}
FROM <table name> [[AS] <alias>] [,…]
[WHERE <predicate>]
[[GROUP BY <colunm list>]
[HAVING <condition on aggregate values>] ]
[ORDER BY <column list>
